import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix


desktop_path = r'C:\Users\sai\Desktop\news.csv'
df = pd.read_excel(desktop_path)


x_train, x_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=7)


tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

tfidf_train = tfidf_vectorizer.fit_transform(x_train)

tfidf_test = tfidf_vectorizer.transform(x_test)

pac = PassiveAggressiveClassifier(max_iter=50)
pac.fit(tfidf_train, y_train)

y_pred = pac.predict(tfidf_test)

#accuracy calculation
score = accuracy_score(y_test, y_pred)
print(f'Accuracy: {round(score * 100, 2)}%')

confusion = confusion_matrix(y_test, y_pred, labels=['FAKE', 'REAL'])
print(confusion)

news_article = ["Example news article text here"]
tfidf_article = tfidf_vectorizer.transform(news_article)
prediction = pac.predict(tfidf_article)
print(f'The news article is classified as: {prediction[0]}')
